[workspace]

resolver = "2"

members = [
  
  # Operational
  "atelier-data",
  "atelier-results",

  # Distributed Convex ML
  "atelier-dcml",
  
  # Scientific Computing
  "atelier-generators",

  # Synthetic Data Generation
  "atelier-synth",
  
  # Binary formation as "entrypoint" for ecosystem interaction
  "atelier-rs",
  
  # Usability and Excellence
  "benches",
  "examples",
  "tests",
]

default-members = [
  "atelier-data",
  "atelier-generators",
  "atelier-results",
  "atelier-rs",
  "atelier-synth",
]

[workspace.package]
edition = "2021"
rust-version = "1.84.1"

description = "Rust Engine for High Frequency, Synthetic and Historical, Market Microstructure Modeling."
authors = ["IteraLabs.ai"]
documentation = "https://docs.rs/atelier-rs/"
repository = "https://github.com/iteralabs/atelier-rs"
homepage = "https://iteralabs.ai/atelier-rs"

keywords = ["machine-learning", "framework", "math", "crypto", "trading"]
categories = ["data-structures", "development-tools", "finance", "simulation"]
include = ["katex-header.html"]
exclude = ["assets/*", ".github", "Makefile.toml", "*.log", "tags"]

license = "Apache-2.0"

[workspace.dependencies]

# Atelier internal dependencies
atelier_data = { path = "./atelier-data", version = "0.0.1" }
atelier_dcml = { path = "./atelier-dcml", version = "0.0.1" }
atelier_generators = { path = "./atelier-generators", version = "0.0.1" }
atelier_results = { path = "./atelier-results", version = "0.0.1" }
atelier_rs = { path = "./atelier-rs", version = "0.0.1" }
atelier_synth = { path = "./atelier-synth", version = "0.0.1" }

# Error Handling
thiserror = { version = "1.0.64" }

# Probabilistic features
rand = { version = "0.9.0" }
rand_distr = { version = "0.5.0" }

# Benchmarks
criterion = { version = "0.5", features = ["html_reports"] }
memuse = { version = "0.2.0" }
human_bytes = { version = "0.4.1" }

# File management
toml = { version = "0.8" }
csv = { version = "1.3" }

# Command line
clap = { version = "4.5", features = ["derive"] }

# Computing
tokio = { version = "1", features = ["full"] }
futures = { version = "0.3" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }

# AI/ML with LibTorch from C++
tch = { version = "0.20.0" }

[workspace.lints.rust]
unsafe_code = "forbid"
unused_extern_crates = "allow"
unreachable_code = "deny"
unreachable_patterns = "deny"
unused_variables = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }

